<?php

// $Id$

function formular_menu()
{
  $items = array();

  $items['formular'] = array(
    'title' => 'Viackrokovy formular',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formular_form'),
    'access callback' => TRUE,
  );
  $items['formular/zoznam'] = array(
    'title' => 'Zoznam odoslani formulara',
    'page callback' => 'formular_page',
    'access arguments' => array('access content'),
//    'type' => MENU_NORMAL_ITEM,
  );

  $items['formular/%/delete'] = array(
    'title' => t('Delete Product'),
    'page callback' => 'formular_delete',
    'access callback' => TRUE,
//    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_form().
 */
function formular_form($form, &$form_state)
{
  dsm($_GET);
  $form['#prefix'] = '<div id="formular-wrapper">';
  $form['#sufix'] = '</div>';

  $form['#tree'] = TRUE;

  $step = empty($form_state['storage']['step']) ? 1 : $form_state['storage']['step'];
  $form_state['storage']['step'] = $step;

  switch ($step) {
    case 1:
      $form['step1'] = array(
        '#type' => 'fieldset',
        '#title' => 'Krok 1. Meno a priezvisko',
      );

      $form['step1']['name'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaše meno',
        '#required' => TRUE,
      );


      if (isset($form_state['values']['step1']['name'])) {
        $form['step1']['name']['#default_value'] = $form_state['values']['step1']['name'];
      }

      $form['step1']['lastname'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaše priezvisko',
        '#required' => TRUE,
      );

      if (isset($form_state['values']['step1']['lastname'])) {
        $form['step1']['lastname']['#default_value'] = $form_state['values']['step1']['lastname'];
      }

      break;

    case 2:

      $form['step2'] = array(
        '#type' => 'fieldset',
        '#title' => 'Krok 2. Ulica, číslo, PSČ, mesto',
      );

      $default_value = empty($form_state['values']['step2']['street']) ? '' : $form_state['values']['step2']['street'];
      $form['step2']['street'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaša ulica',
        '#default_value' => $default_value,
      );

      $default_value = empty($form_state['values']['step2']['number']) ? '' : $form_state['values']['step2']['number'];
      $form['step2']['number'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaše telefónne číslo',
        '#default_value' => $default_value,
        '#required' => TRUE,
      );

      $default_value = empty($form_state['values']['step2']['pc']) ? '' : $form_state['values']['step2']['pc'];
      $form['step2']['pc'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaše poštové smerovacie číslo',
        '#default_value' => $default_value,
        '#required' => TRUE,
      );

      $default_value = empty($form_state['values']['step2']['city']) ? '' : $form_state['values']['step2']['city'];
      $form['step2']['city'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaše mesto',
        '#default_value' => $default_value,
      );

      break;

    case 3:

      $form['step3'] = array(
        '#type' => 'fieldset',
        '#title' => 'Krok 3. IBAN',
      );

      $form['step3']['iban'] = array(
        '#type' => 'textfield',
        '#title' => 'Vaš IBAN',
        '#required' => TRUE,
      );

      if (isset($form_state['values']['step3']['iban'])) {
        $form['step3']['iban']['#default_value'] = $form_state['values']['step3']['iban'];
      }
      break;
  }

  $form['actions'] = array('#type' => 'actions');

  if ($step == 3) {
    $form['actions']['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Skončiť',
    );
  }

  if ($step < 3) {
    $form['actions']['next'] = array(
      '#type' => 'submit',
      '#value' => 'Ďalšie',
      '#ajax' => array(
        'wrapper' => 'formular-wrapper',
        'callback' => 'formular_ajax_callback',
      ),
    );
  }

  if ($step > 1) {
    $form['actions']['prev'] = array(
      '#type' => 'submit',
      '#value' => 'Predchádzajúci krok',
      '#limit_validation_errors' => array(),
      '#submit' => array('formular_form_submit'),
      '#ajax' => array(
        'wrapper' => 'formular-wrapper',
        'callback' => 'formular_ajax_callback',
      ),
    );
  }

  return $form;
}

function formular_ajax_callback($form, $form_state)
{
  return $form;
}

function formular_form_submit($form, &$form_state)
{
  $current_step = 'step' . $form_state['storage']['step'];
  if (!empty($form_state['values'][$current_step])) {
    $form_state['storage']['values'][$current_step] = $form_state['values'][$current_step];
  }

  if (isset($form['actions']['next']['#value']) &&
    $form_state['triggering_element']['#value'] == $form['actions']['next']['#value']) {
    $form_state['storage']['step']++;

    $step_name = 'step' . $form_state['storage']['step'];
    if (!empty($form_state['storage']['values'][$step_name])) {
      $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
    }
  }

  if (isset($form['actions']['prev']['#value'])
    && $form_state['triggering_element']['#value'] == $form['actions']['prev']['#value']) {
    $form_state['storage']['step']--;

    $step_name = 'step' . $form_state['storage']['step'];
    $form_state['values'][$step_name] = $form_state['storage']['values'][$step_name];
  }

  if (isset($form['actions']['submit']['#value']) &&
    $form_state['triggering_element']['#value'] == $form['actions']['submit']['#value']) {
    drupal_set_message(t('Hotovo, ďakujem'));
    $form_state['rebuild'] = FALSE;
    db_insert('formular')
      ->fields(array(
        'name' => $form_state['storage']['values']['step1']['name'],
        'lastname' => $form_state['storage']['values']['step1']['lastname'],
        'street' => $form_state['storage']['values']['step2']['street'],
        'phone' => $form_state['storage']['values']['step2']['number'],
        'pc' => $form_state['storage']['values']['step2']['pc'],
        'city' => $form_state['storage']['values']['step2']['city'],
        'iban' => $form_state['values']['step3']['iban'],
      ))
      ->execute();
    return;
  }

  $form_state['rebuild'] = TRUE;
}

function formular_form_validate($form, &$form_state)
{
  // vars in short
  $name = $form_state['values']['step1']['name'];
  $lastname = $form_state['values']['step1']['lastname'];
  $phone = $form_state['values']['step2']['number'];
  $pc = $form_state['values']['step2']['pc'];
  $iban = $form_state['values']['step3']['iban'];

  if (is_numeric($name) || is_numeric($lastname)) {
    form_set_error('name', t('Meno a priezvisko nemôže byť číslom'));
  }

  if (!empty($phone) && !is_numeric($phone)) {
    form_set_error('phone', t('Telefónne číslo musí byť číslom'));
  }

  if (!empty($pc) && !is_numeric($pc)) {
    form_set_error('pc', t('Poštové smerovacie číslo musí byť číslom'));
  }

  $url = 'https://openiban.com/validate/' . $iban;

  $ch = curl_init();
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_URL, $url);

  $response = curl_exec($ch);
  $check = json_decode($response, true);
  curl_close($ch);

  if (!empty($iban) && $check['valid'] != TRUE) {
    form_set_error('iban', t('Váš IBAN je neplatný'));
  }
}

function formular_page()
{

  $data = db_select('formular', 'f')
    ->fields('f')
    ->execute()
    ->fetchAll();

  return theme('zoznam', array('data' => $data));
}

function formular_theme()
{
  $path = drupal_get_path('module', 'formular');
  return array(
    'zoznam' => array(
      'variables' => array(
        'data' => null,
      ),
      'template' => 'formular-zoznam',
    ),
  );
}

function formular_delete()
{
  global $base_url;
  global $base_path;
  $start = 'formular/';
  $end = '/delete';
  $string = $_GET['q'];
  $id = substr($string, strlen($start), -strlen($end));
  $query = db_delete('formular')->condition('id', $id)->execute();
  if ($query) {
    header('Location: ' . $base_url . $base_path . 'formular/zoznam');
  }
}
